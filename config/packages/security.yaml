security:
  enable_authenticator_manager: true

  # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
  password_hashers:
    Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
      algorithm: 'bcrypt'
      cost: 15

  # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
  providers:
    app_user_provider:
      entity:
        class: Coddin\OpenIDConnect\Domain\Entity\User
        property: username

  firewalls:
    dev:
      pattern: ^/(_(profiler|wdt)|css|images|js)/
      security: false
    main:
      lazy: true
      provider: app_user_provider

      # activate different ways to authenticate
      # https://symfony.com/doc/current/security.html#the-firewall
      form_login:
        login_path: login
        check_path: login
        #enable_csrf: true

      logout:
        path: app_logout
        # where to redirect after logout
        target: login

      # https://symfony.com/doc/current/security/impersonating_user.html
      # switch_user: true

  # Easy way to control access for large sections of your site
  # Note: Only the *first* access control that matches will be used
  access_control:
    - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: ^/account, roles: ROLE_USER }
    - { path: ^/identity/introspect, roles: PUBLIC_ACCESS, ips: '%env(TRUSTED_IPS)%' }
    - { path: ^/identity/introspect, roles: ROLE_NO_ACCESS }
